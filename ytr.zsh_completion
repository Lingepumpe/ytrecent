#compdef ytr

if (( CURRENT == 2 )); then
    _values "command" \
        'channel[handle channels to follow]' \
        'sync[fetch list of recent videos from channels]' \
        'list[show cached list of videos]' \
        'play[play videos via external player ]' \
        'help[show help message]'
elif (( CURRENT >= 3 )); then
    case "$words[2]" in
        c|ch|channel)
            if (( CURRENT == 3 )); then
                _values "command" \
                    'add[add channel to follow]' \
                    'remove[remove channel]' \
                    'list[show followed channels]'
            fi
            case "$words[3]" in
                rm|remove) _values "channel" $(ytr channel list);;
            esac
            ;;
        s|sync)
            _arguments : '3:' \
                '-q[do not print anything]' \
                '-v[be verbose]' \
                '-c[clear cache before syncing]'
            ;;
        l|list)
            _arguments -s : '3:' \
                '-s[update cache before listing]' \
                '-d[show videos newer than <days> old]:days' \
                '-a[show all videos, overrides -d]' \
                '-t[print entries with tabs as separators instead of a table]'
            _values "column" \
                'n[video number, zero padded]' \
                'N[video number, space padded in brackets]' \
                'a[video author]' \
                't[video title]' \
                'T[video title, truncated]' \
                'd[video publish date, UTC]' \
                'D[video publish date, formatted & local]' \
                'i[youtube video id]'
            ;;
        p|play)
            _arguments : '3:' \
                '-p[print video URLs instead of playing]'
            local -a videos
            IFS=$'\t'
            while read num author title; do
                videos=( ${videos[@]} "$(printf "%s:%s, %s" "${num}" "$author" "$title")" )
            done <<< $(ytr list -t nat | sed 's/:/\\:/g')
            _describe -V 'video' videos
            ;;
    esac
fi

# vim: set et sw=2 ts=2 ft=zsh: 
